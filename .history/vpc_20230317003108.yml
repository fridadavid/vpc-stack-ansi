- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
     - name: Import VPC variables
       include_vars: vars/vpc_setup.yml
     - name: create my devvpc
       amazon.aws.ec2_vpc_net:
         name: "{{vpc_name}}"
         cidr_block: "{{vpccidr}}"
         region: "{{region}}"
         dns_support:  yes
         dns_hostnames:  yes
         tenancy: default
         state: "{{state}}"
       register: vpcout
     - name: Create pub sub1
       amazon.aws.ec2_vpc_subnet:
         state: "{{state}}"
         vpc_id: "{{vpcout.vpc.id}}"
         cidr: "{{pubsubcidr1}}"
         region: "{{region}}"
         az: "{{az1}}"
         map_public: yes
       register: pubsubnet1out
     - name: Create pub sub2
       amazon.aws.ec2_vpc_subnet:
         state: "{{state}}"
         vpc_id: "{{vpcout.vpc.id}}"
         cidr: "{{pubsubcidr2}}"
         region: "{{region}}"
         az: "{{az2}}"
         map_public: yes
       register: pubsubnet2out 
     - name: Create pri sub1
       amazon.aws.ec2_vpc_subnet:
         state: "{{state}}"
         vpc_id: "{{vpcout.vpc.id}}"
         cidr: "{{privsubcidr1}}"
         region: "{{region}}"
         az: "{{az1}}"
       register: privsubnet1out 
     - name: Create pri sub2
       amazon.aws.ec2_vpc_subnet:
        state: "{{state}}"
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{privsubcidr2}}"
        region: "{{region}}"
        az: "{{az2}}"
       register: privsubnet2out 
     - name: Create pri sub3
       amazon.aws.ec2_vpc_subnet:
        state: "{{state}}"
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{privsubcidr3}}"
        region: "{{region}}"
        az: "{{az1}}"
       register: privsubnet3out 
     - name: Create pri sub4
       amazon.aws.ec2_vpc_subnet:
        state: "{{state}}"
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{privsubcidr4}}"
        region: "{{region}}"
        az: "{{az2}}"
       register: privsubnet4out
       debug:  privsubnet4out
     - name: Create Internet gateway
       amazon.aws.ec2_vpc_igw:
          vpc_id: "{{vpcout.vpc.id}}"
          state: "{{state}}"
          region: "{{region}}"
       register: igwout
       debug:  igwout
     - name: Create  nat gateway1
       amazon.aws.ec2_vpc_nat_gateway:
          state: "{{state}}"
          subnet_id: "{{pubsubnet1out.subnet.id}}"
          release_eip: true
          region: "{{region}}"
       register: nat_gatewayout1
     - name: Create  nat gateway2
       amazon.aws.ec2_vpc_nat_gateway:
          state: "{{state}}"
          subnet_id: "{{pubsubnet2out.subnet.id}}"
       release_eip: false
       region: "{{region}}"
       register: nat_gatewayout2
     - name: public subnet route table
       amazon.aws.ec2_vpc_route_table:
          vpc_id: "{{vpcout.vpc.id}}"
          region: "{{region}}"
          tags:
                Name: public_route_table
          subnets:
              - "{{ pubsubnet2out.subnet.id }}"
              - "{{ pub_subnet1out.subnet.id }}"
          routes:
              - dest: 0.0.0.0/0
                gateway_id: "{{ igwout.gateway.id }}"
              - dest: ::/0
                gateway_id: "{{ igwout.gateway.id }}"
       register: public_route_tableout
     - name: NAT-protected route table for private sub
       amazon.aws.ec2_vpc_route_table:
          vpc_id: "{{vpcout.vpc.id}}"
          region: "{{region}}"
          tags:
              Name: privateroute_table
          subnets:
              - "{{ pri_subnet1out.subnet.id }}"
              - "{{ pri_subnet2out.subnet.id }}"
              - "{{ pri_subnet3out.subnet.id }}"
              - "{{ pri_subnet4out.subnet.id }}"
          routes:
              - dest: 0.0.0.0/0
                instance_id: "{{ nat_gatewayout1.instance_id }}"
       register: nat_route_table
      
